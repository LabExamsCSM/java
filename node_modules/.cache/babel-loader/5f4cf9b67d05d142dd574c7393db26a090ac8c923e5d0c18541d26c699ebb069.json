{"ast":null,"code":"export const Data = [{\n  title: `Design a simple HTML form.`,\n  type: \"html\",\n  code: `<!DOCTYPE html>\n\n      <html>\n      \n      <head>\n      \n          <title>Simple Form</title>\n      \n      </head>\n      \n      <body>\n      \n          <form action=\"/submit\" method=\"post\">\n      \n              <label for=\"username\">Username:</label>\n      \n              <input type=\"text\" id=\"username\" name=\"username\" required>\n      \n              <br>\n              <label for=\"password\">Password:</label>\n      \n              <input type=\"password\" id=\"password\" name=\"password\" required>\n      \n              <br>\n      \n              <input type=\"submit\" value=\"Submit\">\n      \n          </form>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Develop a Student registration form using HTML Form elements.`,\n  type: \"html\",\n  code: `<!DOCTYPE html>\n      <html>\n      \n      <head>\n          <title>Student Registration Form</title>\n      </head>\n      \n      <body>\n      \n          <form action=\"/submit\" method=\"post\">\n              <label for=\"firstName\">First Name:</label>\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required>\n      \n              <br>\n      \n              <label for=\"lastName\">Last Name:</label>\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" required>\n      \n              <br>\n      \n              <label for=\"email\">Email:</label>\n              <input type=\"email\" id=\"email\" name=\"email\" required>\n      \n              <br>\n      \n              <label for=\"dob\">Date of Birth:</label>\n              <input type=\"date\" id=\"dob\" name=\"dob\" required>\n      \n              <br>\n      \n              <label for=\"gender\">Gender:</label>\n              <select id=\"gender\" name=\"gender\" required>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n              </select>\n      \n              <br>\n      \n              <input type=\"submit\" value=\"Submit\">\n          </form>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Demonstrate any six HTML form elements with suitable example.`,\n  type: \"html\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <title>HTML Form Elements</title>\n      </head>\n      \n      <body>\n      \n          <form action=\"/submit\" method=\"post\">\n              <label for=\"firstName\">1. Text Input:</label>\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required>\n      \n              <br>\n      \n              <label for=\"email\">2. Email Input:</label>\n              <input type=\"email\" id=\"email\" name=\"email\" required>\n      \n              <br>\n      \n              <label for=\"password\">3. Password Input:</label>\n              <input type=\"password\" id=\"password\" name=\"password\" required>\n      \n              <br>\n      \n              <label for=\"birthdate\">4. Date Input:</label>\n              <input type=\"date\" id=\"birthdate\" name=\"birthdate\" required>\n      \n              <br>\n      \n              <label for=\"country\">6. Dropdown (Select) Menu:</label>\n              <select id=\"country\" name=\"country\" required>\n                  <option value=\"usa\">United States</option>\n                  <option value=\"canada\">Canada</option>\n                  <option value=\"uk\">United Kingdom</option>\n              </select>\n      \n              <br>\n      \n              <label>7. Checkbox:</label>\n              <input type=\"checkbox\" id=\"subscribe\" name=\"subscribe\" value=\"yes\">\n              <label for=\"subscribe\">Subscribe to Newsletter</label>\n      \n              <br>\n      \n              <input type=\"submit\" value=\"Submit\">\n          </form>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write table and list elements in HTML5.`,\n  type: \"html\",\n  code: `TABLE:\n\n      <!DOCTYPE html>\n      <html \">\n      <head>\n          <title>HTML5 Table Example</title>\n      </head>\n      <body>\n      \n          <h2>Sample Table</h2>\n      \n          <table border=1>\n              <thead>\n                  <tr>\n                      <th>Header 1</th>\n                      <th>Header 2</th>\n                      <th>Header 3</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr>\n                      <td>Row 1, Cell 1</td>\n                      <td>Row 1, Cell 2</td>\n                      <td>Row 1, Cell 3</td>\n                  </tr>\n                  <tr>\n                      <td>Row 2, Cell 1</td>\n                      <td>Row 2, Cell 2</td>\n                      <td>Row 2, Cell 3</td>\n                  </tr>\n                  <tr>\n                      <td>Row 3, Cell 1</td>\n                      <td>Row 3, Cell 2</td>\n                      <td>Row 3, Cell 3</td>\n                  </tr>\n              </tbody>\n          </table>\n      \n      </body>\n      </html>\n      \n      LIST \n      \n      <!DOCTYPE html>\n      <html >\n      <head>\n          <title>HTML5 List Examples</title>\n      </head>\n      <body>\n      \n          <h2>Unordered List (ul)</h2>\n          <ul>\n              <li>Item 1</li>\n              <li>Item 2</li>\n              <li>Item 3</li>\n          </ul>\n      \n          <h2>Ordered List (ol)</h2>\n          <ol>\n              <li>First item</li>\n              <li>Second item</li>\n              <li>Third item</li>\n          </ol>\n      \n          <h2>Definition List </h2>\n          <dl>\n              <dt>Term 1</dt>\n              <dd>Definition 1</dd>\n              \n              <dt>Term 2</dt>\n              <dd>Definition 2</dd>\n              \n              <dt>Term 3</dt>\n              <dd>Definition 3</dd>\n          </dl>\n      \n      </body>\n      </html>`\n}, {\n  title: `Write inline, internal and external CSS with suitable examples`,\n  type: \"css\",\n  code: `INLINE:\n\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Inline CSS Example</title>\n      </head>\n      \n      <body>\n      \n          <h1 style=\"color: blue; text-align: center;\">This is a Heading with Inline CSS</h1>\n          <p style=\"font-size: 18px; color: green;\">This is a paragraph with inline styling.</p>\n      \n      </body>\n      \n      </html>\n      \n      INTERNAL:\n      \n      <!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <title>Internal CSS Example</title>\n      </head>\n      \n      <body>\n      \n          <h1>This is a Heading with Internal CSS</h1>\n          <p>This is a paragraph with internal styling.</p>\n      \n          <style>\n              h1 {\n                  color: blue;\n                  text-align: center;\n              }\n      \n              p {\n                  font-size: 18px;\n                  color: green;\n              }\n          </style>\n      \n      </body>\n      \n      </html>\n      \n      \n      EXTERNAL :\n      \n      <!DOCTYPE html>\n      <html>\n      \n      <head>\n          <title>External CSS Example</title>\n          <link rel=\"stylesheet\" href=\"styles.css\">\n      </head>\n      \n      <body>\n      \n          <h1>This is a Heading with External CSS</h1>\n          <p>This is a paragraph with external styling.</p>\n      \n      </body>\n      \n      </html>\n      \n      \n      \n      /* styles.css */\n      \n      h1 {\n      color: blue;\n      text-align: center;\n      }\n      \n      p {\n      font-size: 18px;\n      color: green;\n      }`\n}, {\n  title: `Write different types of CSS selectors with examples.`,\n  type: \"css\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <title>CSS Selectors Example</title>\n      \n          <style>\n              /* Universal Selector */\n              * {\n                  margin: 0;\n                  padding: 0;\n              }\n      \n              /* Type Selector (Element Selector) */\n              p {\n                  color: blue;\n              }\n      \n              /* Class Selector */\n              .highlight {\n                  background-color: yellow;\n              }\n      \n              /* ID Selector */\n              #header {\n                  font-size: 24px;\n              }\n      \n              /* Descendant Selector */\n              ul li {\n                  list-style-type: square;\n              }\n      \n              /* Child Selector */\n              nav>.nav-item {\n                  font-weight: bold;\n              }\n      \n              /* Attribute Selector */\n              a[href^=\"https://\"] {\n                  color: green;\n              }\n      \n              /* Pseudo-class Selector */\n              p:first-child {\n                  font-weight: bold;\n              }\n          </style>\n      \n      </head>\n      \n      <body>\n      \n          <div id=\"header\">Header</div>\n      \n          <ul>\n              <li class=\"nav-item\">Item 1</li>\n              <li class=\"nav-item\">Item 2</li>\n              <li class=\"nav-item\">Item 3</li>\n          </ul>\n      \n          <p>This is a paragraph with a <span class=\"highlight\">highlighted</span> word.</p>\n      \n          <a href=\"https://example.com\">Visit Example</a>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Demonstrate CSS boarder and background properties with examples`,\n  type: \"css\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n      \n          <title>CSS Border and Background Example</title>\n      \n          <style>\n              /* Border and Background for Header */\n              header {\n                  background-color: #333;\n                  color: white;\n                  text-align: center;\n                  padding: 10px;\n                  border-bottom: 2px solid #fff;\n              }\n      \n              /* Border and Background for Main Content */\n              main {\n                  padding: 20px;\n                  border: 1px solid #ddd;\n                  background-color: #f8f8f8;\n              }\n      \n              /* Border and Background for Button */\n              button {\n                  padding: 10px;\n                  border: 2px solid #4CAF50;\n                  background-color: #4CAF50;\n                  color: white;\n                  cursor: pointer;\n                  border-radius: 5px;\n              }\n          </style>\n      </head>\n      \n      <body>\n      \n          <header>\n              <h1>CSS Border and Background Example</h1>\n          </header>\n      \n          <main>\n              <p>This is the main content with a background and border.</p>\n              <button>Click me</button>\n          </main>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Demonstrate background and text properties of CSS.`,\n  type: \"css\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n      \n          <title>CSS Background and Text Properties Example</title>\n      \n          <style>\n              /* Background and Text for Body */\n              body {\n                  background-color: #f4f4f4;\n                  color: #333;\n                  font-family: Arial, sans-serif;\n                  margin: 0;\n                  padding: 0;\n                  line-height: 1.6;\n              }\n      \n              /* Background and Text for Header */\n              header {\n                  background-color: #333;\n                  color: white;\n                  text-align: center;\n                  padding: 20px;\n              }\n      \n              /* Background and Text for Main Content */\n              main {\n                  padding: 20px;\n                  background-color: #fff;\n                  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n              }\n      \n              /* Background and Text for Paragraph */\n              p {\n                  background-color: #e0f7fa;\n                  padding: 10px;\n                  border: 1px solid #4CAF50;\n              }\n          </style>\n      </head>\n      \n      <body>\n      \n          <header>\n              <h1>CSS Background and Text Properties Example</h1>\n          </header>\n      \n          <main>\n              <p>This is the main content with a white background, box shadow, and green-bordered paragraphs.</p>\n              <p>Another paragraph with a different background color and border.</p>\n          </main>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write a JavaScript to find the sum of n numbers.`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html>\n      \n      <head>\n          <title>Sum of n Numbers</title>\n          <script>\n              function calculateSum() {\n                  // Prompt the user for the value of n\n                  var n = parseInt(prompt(\"Enter the number of values (n):\"));\n      \n                  // Validate if n is a positive integer\n                  if (isNaN(n) || n <= 0) {\n                      alert(\"Please enter a valid positive integer for n.\");\n                      return;\n                  }\n      \n                  var sum = 0;\n      \n                  // Prompt the user to enter n numbers and calculate the sum\n                  for (var i = 1; i <= n; i++) {\n                      var number = parseFloat(prompt(\"Enter number \" + i + \":\"));\n      \n                      // Validate if the entered value is a number\n                      if (isNaN(number)) {\n                          alert(\"Please enter valid numbers.\");\n                          return;\n                      }\n      \n                      sum += number;\n                  }\n      \n                  // Display the sum\n                  alert(\"The sum of the entered numbers is: \" + sum);\n              }\n          </script>\n      </head>\n      \n      <body>\n      \n          <h2>Sum of n Numbers</h2>\n      \n          <button onclick=\"calculateSum()\">Calculate Sum</button>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write a JavaScript function that accepts two arguments, a string and a letter and the function will count the number of occurrences of the specified letter within the string.`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html>\n      \n      <head>\n          <title>Count Occurrences of Letter</title>\n          <script>\n              function countOccurrences(str, letter) {\n                  // Convert both the string and letter to lowercase for case-insensitive comparison\n                  str = str.toLowerCase();\n                  letter = letter.toLowerCase();\n      \n                  var count = 0;\n      \n                  // Loop through each character in the string\n                  for (var i = 0; i < str.length; i++) {\n                      // Check if the current character is equal to the specified letter\n                      if (str[i] === letter) {\n                          count++;\n                      }\n                  }\n      \n                  // Display the result\n                  alert(\"The letter '\" + letter + \"' occurs \" + count + \" times in the string.\");\n              }\n          </script>\n      </head>\n      \n      <body>\n      \n          <h2>Count Occurrences of Letter</h2>\n      \n          <!-- Example usage: -->\n          <script>\n              // Call the function with a string and a letter\n              countOccurrences(\"Hello, Woorld!\", \"o\");\n          </script>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write a recursive function with suitable example`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <title>Recursive Function Example</title>\n          <script>\n              function factorial(n) {\n                  // Base case: factorial of 0 or 1 is 1\n                  if (n === 0 || n === 1) {\n                      return 1;\n                  } else {\n                      // Recursive case: n! = n * (n-1)!\n                      return n * factorial(n - 1);\n                  }\n              }\n      \n              // Example usage:\n              document.addEventListener(\"DOMContentLoaded\", function () {\n                  const number = 4;\n                  const result = factorial(number);\n                  alert(\\`The factorial of \\${number} is: \\${result}\\`);\n              });\n          </script>\n      </head>\n      \n      <body>\n      \n          <h2>Recursive Function Example</h2>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write a java script program to display squares and cubes of 1 to 10 numbers in table format`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <title>Squares and Cubes Table</title>\n          <style>\n              table {\n                  border-collapse: collapse;\n                  width: 50%;\n                  margin: 20px auto;\n              }\n      \n              th,\n              td {\n                  border: 1px solid #ddd;\n                  padding: 10px;\n                  text-align: center;\n              }\n      \n              th {\n                  background-color: #f2f2f2;\n              }\n          </style>\n      </head>\n      \n      <body>\n      \n          <h2>Squares and Cubes Table</h2>\n      \n          <table>\n              <thead>\n                  <tr>\n                      <th>Number</th>\n                      <th>Square</th>\n                      <th>Cube</th>\n                  </tr>\n              </thead>\n              <tbody id=\"table-body\"></tbody>\n          </table>\n      \n          <script>\n              document.addEventListener(\"DOMContentLoaded\", function () {\n                  // Get the table body element\n                  const tableBody = document.getElementById(\"table-body\");\n      \n                  // Generate rows for numbers 1 to 10 and their squares and cubes\n                  for (let i = 1; i <= 10; i++) {\n                      const square = i ** 2;\n                      const cube = i ** 3;\n      \n                      // Create a new row\n                      const row = document.createElement(\"tr\");\n      \n                      // Add cells for number, square, and cube\n                      row.innerHTML = \\`\n                          <td>\\${i}</td>\n                          <td>\\${square}</td>\n                          <td>\\${cube}</td>\n                      \\`;\n      \n                      // Append the row to the table body\n                      tableBody.appendChild(row);\n                  }\n              });\n          </script>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write a java script function to display the factorial of a given number.`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n          <title>Factorial Calculator</title>\n          <style>\n              body {\n                  text-align: center;\n                  margin: 50px;\n              }\n          </style>\n      </head>\n      <body>\n      \n          <h2>Factorial Calculator</h2>\n      \n          <label for=\"number\">Enter a number:</label>\n          <input type=\"number\" id=\"number\">\n          <button onclick=\"calculateFactorial()\">Calculate Factorial</button>\n      \n          <p id=\"result\"></p>\n      \n          <script>\n              function calculateFactorial() {\n                  // Get the user input\n                  const userInput = document.getElementById(\"number\").value;\n      \n                  // Convert the input to a number\n                  const number = parseInt(userInput);\n      \n                  // Check if the input is a valid positive integer\n                  if (isNaN(number) || number < 0) {\n                      alert(\"Please enter a valid positive integer.\");\n                      return;\n                  }\n      \n                  // Call the factorial function\n                  const result = factorial(number);\n      \n                  // Display the result\n                  document.getElementById(\"result\").innerText = \\`The factorial of \\${number} is: \\${result}\\`;\n              }\n      \n              function factorial(n) {\n                  // Base case: factorial of 0 or 1 is 1\n                  if (n === 0 || n === 1) {\n                      return 1;\n                  } else {\n                      // Recursive case: n! = n * (n-1)!\n                      return n * factorial(n - 1);\n                  }\n              }\n          </script>\n      \n      </body>\n      </html>\n      `\n}, {\n  title: `Demonstrate different types of mouse events with example.`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <title>Mouse Events Example</title>\n          <style>\n              div {\n                  width: 200px;\n                  height: 200px;\n                  background-color: lightblue;\n                  margin: 20px;\n                  padding: 10px;\n                  text-align: center;\n              }\n          </style>\n      </head>\n      \n      <body>\n      \n          <h2>Mouse Events Example</h2>\n      \n          <div id=\"mouseEventDemo\" onmouseover=\"handleMouseOver()\" onmouseout=\"handleMouseOut()\" onclick=\"handleClick()\">Hover\n              over me</div>\n      \n          <script>\n              function handleMouseOver() {\n                  document.getElementById(\"mouseEventDemo\").innerHTML = \"Mouse Over!\";\n                  document.getElementById(\"mouseEventDemo\").style.backgroundColor = \"lightgreen\";\n              }\n      \n              function handleMouseOut() {\n                  document.getElementById(\"mouseEventDemo\").innerHTML = \"Hover over me\";\n                  document.getElementById(\"mouseEventDemo\").style.backgroundColor = \"lightblue\";\n              }\n      \n              function handleClick() {\n                  alert(\"Mouse Clicked!\");\n              }\n          </script>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Demonstrate event bubbling with example`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n      \n          <title>Event Bubbling Example</title>\n          <style>\n              div {\n                  padding: 20px;\n                  margin: 10px;\n                  border: 1px solid #333;\n              }\n          </style>\n      </head>\n      \n      <body>\n      \n          <h2>Event Bubbling Example</h2>\n      \n          <div id=\"outer\" onclick=\"handleEvent('outer')\">\n              Outer\n              <div id=\"middle\" onclick=\"handleEvent('middle')\">\n                  Middle\n                  <div id=\"inner\" onclick=\"handleEvent('inner')\">\n                      Inner\n                  </div>\n              </div>\n          </div>\n      \n          <script>\n              function handleEvent(element) {\n                  alert(\\`Event bubbled from \\${element} element.\\`);\n              }\n          </script>\n      \n      </body>\n      \n      </html>`\n}, {\n  title: `Write a function to sort array elements`,\n  type: \"js\",\n  code: `<!DOCTYPE html>\n      <html lang=\"en\">\n      \n      <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Array Sorting Example</title>\n      </head>\n      \n      <body>\n      \n          <h2>Array Sorting Example</h2>\n          <p>unsortedArray: [5, 2, 8, 1, 7]</p>\n          <p id=\"sortedArrayTag\"></p>\n          <script>\n              function sortArray(arr) {\n                  // Use the Array.sort() method to sort the array\n                  arr.sort(function (a, b) {\n                      return a - b; // Compare function for ascending order\n                      // For descending order, use: return b - a;\n                  });\n      \n                  return arr; // Return the sorted array\n              }\n      \n              // Example usage:\n              const unsortedArray = [5, 2, 8, 1, 7];\n              const sortedArray = sortArray(unsortedArray);\n      \n              console.log(\"Original Array:\", unsortedArray);\n              console.log(\"Sorted Array:\", sortedArray);\n              document.getElementById('sortedArrayTag').innerHTML = \"Sorted array: [\" + sortedArray + \"]\"\n          </script>\n      \n      </body>\n      \n      </html>`\n}, {\n  cycle: 3,\n  title: `. Create an table employee with (ENO, NAME,      BASIC,        HRA,         DA,         PF,         IT,      GROSS,        NET ) attributes  and insert values only for eno,ename,basic attributes for  3 to 4 records and  write a PL/SQL block to calculate the Gross salary & Net salary for an entered employee for the following conditions:\n        \tHRA is 15% of basic.\n        \tDA  is 62% of basic.\n        \tPF is 780/- if gross salary exceeds 8000, otherwise 600/-.\n        \tProfessional tax is 2% of basic.\n             And then print the employee no, name, hra, da, pf, ptax, gross salary & net salary \tfor that employee.\n        `,\n  code: ` SQL>create table empp(eno number,name varchar2(30),basic number,hra number,da number,pf number,it number,gross number,net number);\n            SQL>insert into empp(eno,name,basic) values(1,'manu',5000)\n            SQL>insert into empp(eno,name,basic) values(2,'ravi',6000)\n            -----------------------open file asdf.sql----------------------------\n\n                                declare\n                teno empp.eno%type :=&employeenumber;\n                thra number;\n                tda number;\n                tename empp.name%type;\n                tpf number;\n                tit number;\n                tbasic empp.basic%type;\n                tgross number;\n                tnet number;\n                begin\n                select name,basic into tename,tbasic from empp where eno=teno;\n                        thra:=tbasic*.15;\n                        tda:=tbasic*.62;\n                        tgross:=tbasic+thra+tda;\n                if tgross>8000 then\n                        tpf:=780;\n                else\n                        tpf:=600;\n                end if;\n                        tit:=tgross*.02;\n                        tnet:=tgross-tpf-tit;\n                update empp set hra=thra,da=tda,gross=tgross,pf=tpf,it=tit,net=tnet where eno=teno;\n                dbms_output.put_line('....EMPLOYEE DETAILS....');\n                dbms_output.put_line('Employee Name  :'||tename);\n                dbms_output.put_line('BASIC          :'||tbasic);\n                dbms_output.put_line('HRA            :'||thra);\n                dbms_output.put_line('DA             :'||tda);\n                dbms_output.put_line('Gross salary   :'||tgross);\n                dbms_output.put_line('PF             :'||tpf);\n                dbms_output.put_line('Income tax     :'||tit);\n                dbms_output.put_line('Net salary     :'||tnet);\n                exception\n                when No_data_found then\n                dbms_output.put_line('no such record');\n                end;\n                ----------------------------------------------------------\n                @+paste the file path in sql+\n                click enter and press /\n\n                Output :\n                SQL> /\n                Enter value for employeenumber: 2\n                SQL> select * From empp;\n                `\n}, {\n  cycle: 3,\n  title: `Write a PL/SQL program using cursors to load data from one table into another table based on condition.`,\n  code: ` SQL>create table emp1(name varchar2(30),salary number);\n            -----------------------open file asdf.sql----------------------------\n            DECLARE\n            sal_limit NUMBER (4);\n            my_ename emp.ename%TYPE;\n            my_sal emp.sal%TYPE;\n            CURSOR my_cursor IS SELECT ename,sal\n                        FROM emp\n                        WHERE sal>sal_limit ;\n            BEGIN\n            sal_limit  := 3000 ;\n            OPEN   my_cursor;\n            LOOP\n            FETCH my_cursor INTO my_ename , my_sal;\n            EXIT  WHEN my_cursor%NOTFOUND ;\n            INSERT INTO emp1 VALUES (my_ename , my_sal);\n            END LOOP ;\n            CLOSE my_cursor ;\n            COMMIT ;\n            END ;\n            -----------------------------------------------------\n            @+paste the file path in sql+\n                click enter and press /\n\n                Output :\n                SQL> /\n                SQL> select * From emp1;\n    `\n}, {\n  cycle: 3,\n  title: ` Write a PL/SQL Program to count the number of Records using CURSORS.`,\n  code: `\n        -----------------------open file asdf.sql----------------------------\n        Declare\n        cursor c is select * from employee;\n        Details employee%rowtype;\n        Begin\n        Open c;\n        Loop\n        Fetch c into details;\n        Exit when c%notfound;\n       End loop;\n       dbms_output.put_line('The no of records in employee table are '||c%rowcount);\n       End;\n       -------------------------------------------------\n       @+paste the file path in sql+\n       click enter and press /\n\n        SQL> /\n        The no of records in employee table are 8\n      \n    `\n}, {\n  cycle: 3,\n  title: ` Write a PL/SQL programs to demonstrate Pre-defined exception`,\n  code: `\n        -----------------------open file asdf.sql----------------------------\n        declare\n        a number:=&a;\n        b number:=&b;\n        c number;\n        begin\n           c:=a/b;\n        dbms_output.put_line('the result is'||c);\n        exception\n        when  zero_divide  then\n        dbms_output.put_line('DIVISION BY ZERO IS NOT POSSIBLE');\n        end;\n        -------------------------------------------------------------------\n        @+paste the file path in sql+\n        click enter and press /\n \n        Output :\n        Enter value for a: 4\n        Enter value for b: 2\n        The result is   2\n     \n    `\n}, {\n  cycle: 3,\n  title: `User-defined exception( for this Create a table called sales with the following structure salesman no, name , target & actual. Accept a salesman no and find whether that particular salesperson received the commission or not depends upon the following condition. \n        \tIf the actual amount is greater than that of the target, commission is receivable otherwise raise the exception ‘commission is not receivable)\n        `,\n  code: `\n        SQL>create table sales_man(sno number,name varchar2(20),target number,actual number);\n        SQL>  insert into sales_man values(1,'manu',2000,3000);\n        SQL> insert into sales_man values(2,'hari',1500,1000);\n        \n        -----------------------open file asdf.sql----------------------------\n        declare\n        tsno sales_man.sno%type;\n        tr sales_man.target%type;\n        ta sales_man.actual%type;\n        error exception;\n        begin\n        tsno:=&salesman_number;\n        select sno,target,actual into tsno,tr,ta \n        from sales_man \n        where sno=tsno;\n        if ta<tr then\n        raise error;\n        else\n        dbms_output.put_line('...Commission Received...');\n        end if;\n        exception\n        when error then\n        dbms_output.put_line('...Commission is not Received...');\n        when no_data_found then\n        dbms_output.put_line('Entered salesman not there in a table');\n        end;\n        -------------------------------------------------------------------\n        @+paste the file path in sql+\n        click enter and press /\n        \n        output:\n        Enter value for salesman_number: 1\n    `\n}, {\n  cycle: 3,\n  title: ` Write a  PL/SQL Program to demonstrate functions.`,\n  code: `\n        SQL> create table emp(empno number,ename varchar2(10),salary number,commission number);\n        SQL> insert into emp values(&empno,'&ename',&salary,'&commission');\n        SQL> insert into emp values(1,'manu',5000,'');\n        SQL> insert into emp values(2,'hari',4000,'4000');\n        SQL> select * From emp;\n\n\n        Function code :\n            create or replace function review(empid number) return number is\n            incr number;\n            net number;\n            vempno number%type;\n            vsal number;\n            vcomm emp.commission%type;\n            begin\n            select empno,salary,nvl(commission,0) into vempno,vsal,vcomm from emp where empno=empid;\n            net:=vsal+vcomm;\n            if net<=5000 then\n            incr:=net*0.20;\n            elsif net>=8000 and vsal<=10000 then\n            incr=net*0.50;\n            else\n            incr:=net*0.40;\n            end if;\n            return(incr);\n            end review;\n\n        PL/SQL block :\n            declare\n            incr_sal number(7,2);\n            begin\n            incr_sal:=review(1);\n            dbms_output.put_line('the increment is'||incr_sal);\n            end;\n\n    `\n}, {\n  cycle: 3,\n  title: `Write a  PL/SQL Program to demonstrate stored procedures.`,\n  code: `\n        SQL> create table emp7(empno number,ename varchar2(5),basic number,netsal number);\n            Table created.\n        SQL> insert into emp7(empno,ename,basic) values(1,'Manu',9000);\n        SQL> select * from emp7;\n\n        Stored Procedure :\n            create or replace procedure inc_sal(no in number,basic in number,msal out number,m out number)  as \n            teno number;\n            s number;\n            begin\n                select empno into teno from emp7 where empno=no;\n                if sql%found then\n                        s:=basic+(basic*0.05);\n                        msal:=s;\n                        m:=1;\n                else\n                        m:=0;\n                end if;\n            end;\n            /\n            PL/SQL Block :\n\n            declare\n            teno number:=&empnumber;\n            tbasic number;\n            msal number;\n            m number;\n            begin\n            select empno,basic into teno,tbasic from emp7 where empno=teno;\n            inc_sal(teno,tbasic,msal,m);\n            if m=1 then\n                        update emp7 set netsal=msal where empno=teno;\n                end if;\n            exception\n            when No_data_found then\n            dbms_output.put_line('no such record');\n            end;\n\n            / \n            Enter value for empnumber: 1\n            SQL> select * from emp7;\n            `\n}];","map":{"version":3,"names":["Data","title","type","code","cycle"],"sources":["C:/Users/Admin/Desktop/wdd-b/src/data.js"],"sourcesContent":["export const Data = [\r\n  {\r\n    title: `Design a simple HTML form.`,\r\n    type: \"html\",\r\n    code: `<!DOCTYPE html>\r\n\r\n      <html>\r\n      \r\n      <head>\r\n      \r\n          <title>Simple Form</title>\r\n      \r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <form action=\"/submit\" method=\"post\">\r\n      \r\n              <label for=\"username\">Username:</label>\r\n      \r\n              <input type=\"text\" id=\"username\" name=\"username\" required>\r\n      \r\n              <br>\r\n              <label for=\"password\">Password:</label>\r\n      \r\n              <input type=\"password\" id=\"password\" name=\"password\" required>\r\n      \r\n              <br>\r\n      \r\n              <input type=\"submit\" value=\"Submit\">\r\n      \r\n          </form>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Develop a Student registration form using HTML Form elements.`,\r\n    type: \"html\",\r\n    code: `<!DOCTYPE html>\r\n      <html>\r\n      \r\n      <head>\r\n          <title>Student Registration Form</title>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <form action=\"/submit\" method=\"post\">\r\n              <label for=\"firstName\">First Name:</label>\r\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"lastName\">Last Name:</label>\r\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"email\">Email:</label>\r\n              <input type=\"email\" id=\"email\" name=\"email\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"dob\">Date of Birth:</label>\r\n              <input type=\"date\" id=\"dob\" name=\"dob\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"gender\">Gender:</label>\r\n              <select id=\"gender\" name=\"gender\" required>\r\n                  <option value=\"male\">Male</option>\r\n                  <option value=\"female\">Female</option>\r\n              </select>\r\n      \r\n              <br>\r\n      \r\n              <input type=\"submit\" value=\"Submit\">\r\n          </form>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Demonstrate any six HTML form elements with suitable example.`,\r\n    type: \"html\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <title>HTML Form Elements</title>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <form action=\"/submit\" method=\"post\">\r\n              <label for=\"firstName\">1. Text Input:</label>\r\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"email\">2. Email Input:</label>\r\n              <input type=\"email\" id=\"email\" name=\"email\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"password\">3. Password Input:</label>\r\n              <input type=\"password\" id=\"password\" name=\"password\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"birthdate\">4. Date Input:</label>\r\n              <input type=\"date\" id=\"birthdate\" name=\"birthdate\" required>\r\n      \r\n              <br>\r\n      \r\n              <label for=\"country\">6. Dropdown (Select) Menu:</label>\r\n              <select id=\"country\" name=\"country\" required>\r\n                  <option value=\"usa\">United States</option>\r\n                  <option value=\"canada\">Canada</option>\r\n                  <option value=\"uk\">United Kingdom</option>\r\n              </select>\r\n      \r\n              <br>\r\n      \r\n              <label>7. Checkbox:</label>\r\n              <input type=\"checkbox\" id=\"subscribe\" name=\"subscribe\" value=\"yes\">\r\n              <label for=\"subscribe\">Subscribe to Newsletter</label>\r\n      \r\n              <br>\r\n      \r\n              <input type=\"submit\" value=\"Submit\">\r\n          </form>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write table and list elements in HTML5.`,\r\n    type: \"html\",\r\n    code: `TABLE:\r\n\r\n      <!DOCTYPE html>\r\n      <html \">\r\n      <head>\r\n          <title>HTML5 Table Example</title>\r\n      </head>\r\n      <body>\r\n      \r\n          <h2>Sample Table</h2>\r\n      \r\n          <table border=1>\r\n              <thead>\r\n                  <tr>\r\n                      <th>Header 1</th>\r\n                      <th>Header 2</th>\r\n                      <th>Header 3</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr>\r\n                      <td>Row 1, Cell 1</td>\r\n                      <td>Row 1, Cell 2</td>\r\n                      <td>Row 1, Cell 3</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Row 2, Cell 1</td>\r\n                      <td>Row 2, Cell 2</td>\r\n                      <td>Row 2, Cell 3</td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td>Row 3, Cell 1</td>\r\n                      <td>Row 3, Cell 2</td>\r\n                      <td>Row 3, Cell 3</td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      \r\n      </body>\r\n      </html>\r\n      \r\n      LIST \r\n      \r\n      <!DOCTYPE html>\r\n      <html >\r\n      <head>\r\n          <title>HTML5 List Examples</title>\r\n      </head>\r\n      <body>\r\n      \r\n          <h2>Unordered List (ul)</h2>\r\n          <ul>\r\n              <li>Item 1</li>\r\n              <li>Item 2</li>\r\n              <li>Item 3</li>\r\n          </ul>\r\n      \r\n          <h2>Ordered List (ol)</h2>\r\n          <ol>\r\n              <li>First item</li>\r\n              <li>Second item</li>\r\n              <li>Third item</li>\r\n          </ol>\r\n      \r\n          <h2>Definition List </h2>\r\n          <dl>\r\n              <dt>Term 1</dt>\r\n              <dd>Definition 1</dd>\r\n              \r\n              <dt>Term 2</dt>\r\n              <dd>Definition 2</dd>\r\n              \r\n              <dt>Term 3</dt>\r\n              <dd>Definition 3</dd>\r\n          </dl>\r\n      \r\n      </body>\r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write inline, internal and external CSS with suitable examples`,\r\n    type: \"css\",\r\n    code: `INLINE:\r\n\r\n      <!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <title>Inline CSS Example</title>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h1 style=\"color: blue; text-align: center;\">This is a Heading with Inline CSS</h1>\r\n          <p style=\"font-size: 18px; color: green;\">This is a paragraph with inline styling.</p>\r\n      \r\n      </body>\r\n      \r\n      </html>\r\n      \r\n      INTERNAL:\r\n      \r\n      <!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <title>Internal CSS Example</title>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h1>This is a Heading with Internal CSS</h1>\r\n          <p>This is a paragraph with internal styling.</p>\r\n      \r\n          <style>\r\n              h1 {\r\n                  color: blue;\r\n                  text-align: center;\r\n              }\r\n      \r\n              p {\r\n                  font-size: 18px;\r\n                  color: green;\r\n              }\r\n          </style>\r\n      \r\n      </body>\r\n      \r\n      </html>\r\n      \r\n      \r\n      EXTERNAL :\r\n      \r\n      <!DOCTYPE html>\r\n      <html>\r\n      \r\n      <head>\r\n          <title>External CSS Example</title>\r\n          <link rel=\"stylesheet\" href=\"styles.css\">\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h1>This is a Heading with External CSS</h1>\r\n          <p>This is a paragraph with external styling.</p>\r\n      \r\n      </body>\r\n      \r\n      </html>\r\n      \r\n      \r\n      \r\n      /* styles.css */\r\n      \r\n      h1 {\r\n      color: blue;\r\n      text-align: center;\r\n      }\r\n      \r\n      p {\r\n      font-size: 18px;\r\n      color: green;\r\n      }`,\r\n  },\r\n  {\r\n    title: `Write different types of CSS selectors with examples.`,\r\n    type: \"css\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <title>CSS Selectors Example</title>\r\n      \r\n          <style>\r\n              /* Universal Selector */\r\n              * {\r\n                  margin: 0;\r\n                  padding: 0;\r\n              }\r\n      \r\n              /* Type Selector (Element Selector) */\r\n              p {\r\n                  color: blue;\r\n              }\r\n      \r\n              /* Class Selector */\r\n              .highlight {\r\n                  background-color: yellow;\r\n              }\r\n      \r\n              /* ID Selector */\r\n              #header {\r\n                  font-size: 24px;\r\n              }\r\n      \r\n              /* Descendant Selector */\r\n              ul li {\r\n                  list-style-type: square;\r\n              }\r\n      \r\n              /* Child Selector */\r\n              nav>.nav-item {\r\n                  font-weight: bold;\r\n              }\r\n      \r\n              /* Attribute Selector */\r\n              a[href^=\"https://\"] {\r\n                  color: green;\r\n              }\r\n      \r\n              /* Pseudo-class Selector */\r\n              p:first-child {\r\n                  font-weight: bold;\r\n              }\r\n          </style>\r\n      \r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <div id=\"header\">Header</div>\r\n      \r\n          <ul>\r\n              <li class=\"nav-item\">Item 1</li>\r\n              <li class=\"nav-item\">Item 2</li>\r\n              <li class=\"nav-item\">Item 3</li>\r\n          </ul>\r\n      \r\n          <p>This is a paragraph with a <span class=\"highlight\">highlighted</span> word.</p>\r\n      \r\n          <a href=\"https://example.com\">Visit Example</a>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Demonstrate CSS boarder and background properties with examples`,\r\n    type: \"css\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n      \r\n          <title>CSS Border and Background Example</title>\r\n      \r\n          <style>\r\n              /* Border and Background for Header */\r\n              header {\r\n                  background-color: #333;\r\n                  color: white;\r\n                  text-align: center;\r\n                  padding: 10px;\r\n                  border-bottom: 2px solid #fff;\r\n              }\r\n      \r\n              /* Border and Background for Main Content */\r\n              main {\r\n                  padding: 20px;\r\n                  border: 1px solid #ddd;\r\n                  background-color: #f8f8f8;\r\n              }\r\n      \r\n              /* Border and Background for Button */\r\n              button {\r\n                  padding: 10px;\r\n                  border: 2px solid #4CAF50;\r\n                  background-color: #4CAF50;\r\n                  color: white;\r\n                  cursor: pointer;\r\n                  border-radius: 5px;\r\n              }\r\n          </style>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <header>\r\n              <h1>CSS Border and Background Example</h1>\r\n          </header>\r\n      \r\n          <main>\r\n              <p>This is the main content with a background and border.</p>\r\n              <button>Click me</button>\r\n          </main>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Demonstrate background and text properties of CSS.`,\r\n    type: \"css\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n      \r\n          <title>CSS Background and Text Properties Example</title>\r\n      \r\n          <style>\r\n              /* Background and Text for Body */\r\n              body {\r\n                  background-color: #f4f4f4;\r\n                  color: #333;\r\n                  font-family: Arial, sans-serif;\r\n                  margin: 0;\r\n                  padding: 0;\r\n                  line-height: 1.6;\r\n              }\r\n      \r\n              /* Background and Text for Header */\r\n              header {\r\n                  background-color: #333;\r\n                  color: white;\r\n                  text-align: center;\r\n                  padding: 20px;\r\n              }\r\n      \r\n              /* Background and Text for Main Content */\r\n              main {\r\n                  padding: 20px;\r\n                  background-color: #fff;\r\n                  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n              }\r\n      \r\n              /* Background and Text for Paragraph */\r\n              p {\r\n                  background-color: #e0f7fa;\r\n                  padding: 10px;\r\n                  border: 1px solid #4CAF50;\r\n              }\r\n          </style>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <header>\r\n              <h1>CSS Background and Text Properties Example</h1>\r\n          </header>\r\n      \r\n          <main>\r\n              <p>This is the main content with a white background, box shadow, and green-bordered paragraphs.</p>\r\n              <p>Another paragraph with a different background color and border.</p>\r\n          </main>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write a JavaScript to find the sum of n numbers.`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html>\r\n      \r\n      <head>\r\n          <title>Sum of n Numbers</title>\r\n          <script>\r\n              function calculateSum() {\r\n                  // Prompt the user for the value of n\r\n                  var n = parseInt(prompt(\"Enter the number of values (n):\"));\r\n      \r\n                  // Validate if n is a positive integer\r\n                  if (isNaN(n) || n <= 0) {\r\n                      alert(\"Please enter a valid positive integer for n.\");\r\n                      return;\r\n                  }\r\n      \r\n                  var sum = 0;\r\n      \r\n                  // Prompt the user to enter n numbers and calculate the sum\r\n                  for (var i = 1; i <= n; i++) {\r\n                      var number = parseFloat(prompt(\"Enter number \" + i + \":\"));\r\n      \r\n                      // Validate if the entered value is a number\r\n                      if (isNaN(number)) {\r\n                          alert(\"Please enter valid numbers.\");\r\n                          return;\r\n                      }\r\n      \r\n                      sum += number;\r\n                  }\r\n      \r\n                  // Display the sum\r\n                  alert(\"The sum of the entered numbers is: \" + sum);\r\n              }\r\n          </script>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Sum of n Numbers</h2>\r\n      \r\n          <button onclick=\"calculateSum()\">Calculate Sum</button>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write a JavaScript function that accepts two arguments, a string and a letter and the function will count the number of occurrences of the specified letter within the string.`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html>\r\n      \r\n      <head>\r\n          <title>Count Occurrences of Letter</title>\r\n          <script>\r\n              function countOccurrences(str, letter) {\r\n                  // Convert both the string and letter to lowercase for case-insensitive comparison\r\n                  str = str.toLowerCase();\r\n                  letter = letter.toLowerCase();\r\n      \r\n                  var count = 0;\r\n      \r\n                  // Loop through each character in the string\r\n                  for (var i = 0; i < str.length; i++) {\r\n                      // Check if the current character is equal to the specified letter\r\n                      if (str[i] === letter) {\r\n                          count++;\r\n                      }\r\n                  }\r\n      \r\n                  // Display the result\r\n                  alert(\"The letter '\" + letter + \"' occurs \" + count + \" times in the string.\");\r\n              }\r\n          </script>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Count Occurrences of Letter</h2>\r\n      \r\n          <!-- Example usage: -->\r\n          <script>\r\n              // Call the function with a string and a letter\r\n              countOccurrences(\"Hello, Woorld!\", \"o\");\r\n          </script>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write a recursive function with suitable example`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <title>Recursive Function Example</title>\r\n          <script>\r\n              function factorial(n) {\r\n                  // Base case: factorial of 0 or 1 is 1\r\n                  if (n === 0 || n === 1) {\r\n                      return 1;\r\n                  } else {\r\n                      // Recursive case: n! = n * (n-1)!\r\n                      return n * factorial(n - 1);\r\n                  }\r\n              }\r\n      \r\n              // Example usage:\r\n              document.addEventListener(\"DOMContentLoaded\", function () {\r\n                  const number = 4;\r\n                  const result = factorial(number);\r\n                  alert(\\`The factorial of \\${number} is: \\${result}\\`);\r\n              });\r\n          </script>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Recursive Function Example</h2>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write a java script program to display squares and cubes of 1 to 10 numbers in table format`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <title>Squares and Cubes Table</title>\r\n          <style>\r\n              table {\r\n                  border-collapse: collapse;\r\n                  width: 50%;\r\n                  margin: 20px auto;\r\n              }\r\n      \r\n              th,\r\n              td {\r\n                  border: 1px solid #ddd;\r\n                  padding: 10px;\r\n                  text-align: center;\r\n              }\r\n      \r\n              th {\r\n                  background-color: #f2f2f2;\r\n              }\r\n          </style>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Squares and Cubes Table</h2>\r\n      \r\n          <table>\r\n              <thead>\r\n                  <tr>\r\n                      <th>Number</th>\r\n                      <th>Square</th>\r\n                      <th>Cube</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody id=\"table-body\"></tbody>\r\n          </table>\r\n      \r\n          <script>\r\n              document.addEventListener(\"DOMContentLoaded\", function () {\r\n                  // Get the table body element\r\n                  const tableBody = document.getElementById(\"table-body\");\r\n      \r\n                  // Generate rows for numbers 1 to 10 and their squares and cubes\r\n                  for (let i = 1; i <= 10; i++) {\r\n                      const square = i ** 2;\r\n                      const cube = i ** 3;\r\n      \r\n                      // Create a new row\r\n                      const row = document.createElement(\"tr\");\r\n      \r\n                      // Add cells for number, square, and cube\r\n                      row.innerHTML = \\`\r\n                          <td>\\${i}</td>\r\n                          <td>\\${square}</td>\r\n                          <td>\\${cube}</td>\r\n                      \\`;\r\n      \r\n                      // Append the row to the table body\r\n                      tableBody.appendChild(row);\r\n                  }\r\n              });\r\n          </script>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write a java script function to display the factorial of a given number.`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      <head>\r\n          <title>Factorial Calculator</title>\r\n          <style>\r\n              body {\r\n                  text-align: center;\r\n                  margin: 50px;\r\n              }\r\n          </style>\r\n      </head>\r\n      <body>\r\n      \r\n          <h2>Factorial Calculator</h2>\r\n      \r\n          <label for=\"number\">Enter a number:</label>\r\n          <input type=\"number\" id=\"number\">\r\n          <button onclick=\"calculateFactorial()\">Calculate Factorial</button>\r\n      \r\n          <p id=\"result\"></p>\r\n      \r\n          <script>\r\n              function calculateFactorial() {\r\n                  // Get the user input\r\n                  const userInput = document.getElementById(\"number\").value;\r\n      \r\n                  // Convert the input to a number\r\n                  const number = parseInt(userInput);\r\n      \r\n                  // Check if the input is a valid positive integer\r\n                  if (isNaN(number) || number < 0) {\r\n                      alert(\"Please enter a valid positive integer.\");\r\n                      return;\r\n                  }\r\n      \r\n                  // Call the factorial function\r\n                  const result = factorial(number);\r\n      \r\n                  // Display the result\r\n                  document.getElementById(\"result\").innerText = \\`The factorial of \\${number} is: \\${result}\\`;\r\n              }\r\n      \r\n              function factorial(n) {\r\n                  // Base case: factorial of 0 or 1 is 1\r\n                  if (n === 0 || n === 1) {\r\n                      return 1;\r\n                  } else {\r\n                      // Recursive case: n! = n * (n-1)!\r\n                      return n * factorial(n - 1);\r\n                  }\r\n              }\r\n          </script>\r\n      \r\n      </body>\r\n      </html>\r\n      `,\r\n  },\r\n  {\r\n    title: `Demonstrate different types of mouse events with example.`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <title>Mouse Events Example</title>\r\n          <style>\r\n              div {\r\n                  width: 200px;\r\n                  height: 200px;\r\n                  background-color: lightblue;\r\n                  margin: 20px;\r\n                  padding: 10px;\r\n                  text-align: center;\r\n              }\r\n          </style>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Mouse Events Example</h2>\r\n      \r\n          <div id=\"mouseEventDemo\" onmouseover=\"handleMouseOver()\" onmouseout=\"handleMouseOut()\" onclick=\"handleClick()\">Hover\r\n              over me</div>\r\n      \r\n          <script>\r\n              function handleMouseOver() {\r\n                  document.getElementById(\"mouseEventDemo\").innerHTML = \"Mouse Over!\";\r\n                  document.getElementById(\"mouseEventDemo\").style.backgroundColor = \"lightgreen\";\r\n              }\r\n      \r\n              function handleMouseOut() {\r\n                  document.getElementById(\"mouseEventDemo\").innerHTML = \"Hover over me\";\r\n                  document.getElementById(\"mouseEventDemo\").style.backgroundColor = \"lightblue\";\r\n              }\r\n      \r\n              function handleClick() {\r\n                  alert(\"Mouse Clicked!\");\r\n              }\r\n          </script>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Demonstrate event bubbling with example`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n      \r\n          <title>Event Bubbling Example</title>\r\n          <style>\r\n              div {\r\n                  padding: 20px;\r\n                  margin: 10px;\r\n                  border: 1px solid #333;\r\n              }\r\n          </style>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Event Bubbling Example</h2>\r\n      \r\n          <div id=\"outer\" onclick=\"handleEvent('outer')\">\r\n              Outer\r\n              <div id=\"middle\" onclick=\"handleEvent('middle')\">\r\n                  Middle\r\n                  <div id=\"inner\" onclick=\"handleEvent('inner')\">\r\n                      Inner\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      \r\n          <script>\r\n              function handleEvent(element) {\r\n                  alert(\\`Event bubbled from \\${element} element.\\`);\r\n              }\r\n          </script>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    title: `Write a function to sort array elements`,\r\n    type: \"js\",\r\n    code: `<!DOCTYPE html>\r\n      <html lang=\"en\">\r\n      \r\n      <head>\r\n          <meta charset=\"UTF-8\">\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <title>Array Sorting Example</title>\r\n      </head>\r\n      \r\n      <body>\r\n      \r\n          <h2>Array Sorting Example</h2>\r\n          <p>unsortedArray: [5, 2, 8, 1, 7]</p>\r\n          <p id=\"sortedArrayTag\"></p>\r\n          <script>\r\n              function sortArray(arr) {\r\n                  // Use the Array.sort() method to sort the array\r\n                  arr.sort(function (a, b) {\r\n                      return a - b; // Compare function for ascending order\r\n                      // For descending order, use: return b - a;\r\n                  });\r\n      \r\n                  return arr; // Return the sorted array\r\n              }\r\n      \r\n              // Example usage:\r\n              const unsortedArray = [5, 2, 8, 1, 7];\r\n              const sortedArray = sortArray(unsortedArray);\r\n      \r\n              console.log(\"Original Array:\", unsortedArray);\r\n              console.log(\"Sorted Array:\", sortedArray);\r\n              document.getElementById('sortedArrayTag').innerHTML = \"Sorted array: [\" + sortedArray + \"]\"\r\n          </script>\r\n      \r\n      </body>\r\n      \r\n      </html>`,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: `. Create an table employee with (ENO, NAME,      BASIC,        HRA,         DA,         PF,         IT,      GROSS,        NET ) attributes  and insert values only for eno,ename,basic attributes for  3 to 4 records and  write a PL/SQL block to calculate the Gross salary & Net salary for an entered employee for the following conditions:\r\n        \tHRA is 15% of basic.\r\n        \tDA  is 62% of basic.\r\n        \tPF is 780/- if gross salary exceeds 8000, otherwise 600/-.\r\n        \tProfessional tax is 2% of basic.\r\n             And then print the employee no, name, hra, da, pf, ptax, gross salary & net salary \tfor that employee.\r\n        `,\r\n    code: ` SQL>create table empp(eno number,name varchar2(30),basic number,hra number,da number,pf number,it number,gross number,net number);\r\n            SQL>insert into empp(eno,name,basic) values(1,'manu',5000)\r\n            SQL>insert into empp(eno,name,basic) values(2,'ravi',6000)\r\n            -----------------------open file asdf.sql----------------------------\r\n\r\n                                declare\r\n                teno empp.eno%type :=&employeenumber;\r\n                thra number;\r\n                tda number;\r\n                tename empp.name%type;\r\n                tpf number;\r\n                tit number;\r\n                tbasic empp.basic%type;\r\n                tgross number;\r\n                tnet number;\r\n                begin\r\n                select name,basic into tename,tbasic from empp where eno=teno;\r\n                        thra:=tbasic*.15;\r\n                        tda:=tbasic*.62;\r\n                        tgross:=tbasic+thra+tda;\r\n                if tgross>8000 then\r\n                        tpf:=780;\r\n                else\r\n                        tpf:=600;\r\n                end if;\r\n                        tit:=tgross*.02;\r\n                        tnet:=tgross-tpf-tit;\r\n                update empp set hra=thra,da=tda,gross=tgross,pf=tpf,it=tit,net=tnet where eno=teno;\r\n                dbms_output.put_line('....EMPLOYEE DETAILS....');\r\n                dbms_output.put_line('Employee Name  :'||tename);\r\n                dbms_output.put_line('BASIC          :'||tbasic);\r\n                dbms_output.put_line('HRA            :'||thra);\r\n                dbms_output.put_line('DA             :'||tda);\r\n                dbms_output.put_line('Gross salary   :'||tgross);\r\n                dbms_output.put_line('PF             :'||tpf);\r\n                dbms_output.put_line('Income tax     :'||tit);\r\n                dbms_output.put_line('Net salary     :'||tnet);\r\n                exception\r\n                when No_data_found then\r\n                dbms_output.put_line('no such record');\r\n                end;\r\n                ----------------------------------------------------------\r\n                @+paste the file path in sql+\r\n                click enter and press /\r\n\r\n                Output :\r\n                SQL> /\r\n                Enter value for employeenumber: 2\r\n                SQL> select * From empp;\r\n                `,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: `Write a PL/SQL program using cursors to load data from one table into another table based on condition.`,\r\n    code: ` SQL>create table emp1(name varchar2(30),salary number);\r\n            -----------------------open file asdf.sql----------------------------\r\n            DECLARE\r\n            sal_limit NUMBER (4);\r\n            my_ename emp.ename%TYPE;\r\n            my_sal emp.sal%TYPE;\r\n            CURSOR my_cursor IS SELECT ename,sal\r\n                        FROM emp\r\n                        WHERE sal>sal_limit ;\r\n            BEGIN\r\n            sal_limit  := 3000 ;\r\n            OPEN   my_cursor;\r\n            LOOP\r\n            FETCH my_cursor INTO my_ename , my_sal;\r\n            EXIT  WHEN my_cursor%NOTFOUND ;\r\n            INSERT INTO emp1 VALUES (my_ename , my_sal);\r\n            END LOOP ;\r\n            CLOSE my_cursor ;\r\n            COMMIT ;\r\n            END ;\r\n            -----------------------------------------------------\r\n            @+paste the file path in sql+\r\n                click enter and press /\r\n\r\n                Output :\r\n                SQL> /\r\n                SQL> select * From emp1;\r\n    `,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: ` Write a PL/SQL Program to count the number of Records using CURSORS.`,\r\n    code: `\r\n        -----------------------open file asdf.sql----------------------------\r\n        Declare\r\n        cursor c is select * from employee;\r\n        Details employee%rowtype;\r\n        Begin\r\n        Open c;\r\n        Loop\r\n        Fetch c into details;\r\n        Exit when c%notfound;\r\n       End loop;\r\n       dbms_output.put_line('The no of records in employee table are '||c%rowcount);\r\n       End;\r\n       -------------------------------------------------\r\n       @+paste the file path in sql+\r\n       click enter and press /\r\n\r\n        SQL> /\r\n        The no of records in employee table are 8\r\n      \r\n    `,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: ` Write a PL/SQL programs to demonstrate Pre-defined exception`,\r\n    code: `\r\n        -----------------------open file asdf.sql----------------------------\r\n        declare\r\n        a number:=&a;\r\n        b number:=&b;\r\n        c number;\r\n        begin\r\n           c:=a/b;\r\n        dbms_output.put_line('the result is'||c);\r\n        exception\r\n        when  zero_divide  then\r\n        dbms_output.put_line('DIVISION BY ZERO IS NOT POSSIBLE');\r\n        end;\r\n        -------------------------------------------------------------------\r\n        @+paste the file path in sql+\r\n        click enter and press /\r\n \r\n        Output :\r\n        Enter value for a: 4\r\n        Enter value for b: 2\r\n        The result is   2\r\n     \r\n    `,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: `User-defined exception( for this Create a table called sales with the following structure salesman no, name , target & actual. Accept a salesman no and find whether that particular salesperson received the commission or not depends upon the following condition. \r\n        \tIf the actual amount is greater than that of the target, commission is receivable otherwise raise the exception ‘commission is not receivable)\r\n        `,\r\n    code: `\r\n        SQL>create table sales_man(sno number,name varchar2(20),target number,actual number);\r\n        SQL>  insert into sales_man values(1,'manu',2000,3000);\r\n        SQL> insert into sales_man values(2,'hari',1500,1000);\r\n        \r\n        -----------------------open file asdf.sql----------------------------\r\n        declare\r\n        tsno sales_man.sno%type;\r\n        tr sales_man.target%type;\r\n        ta sales_man.actual%type;\r\n        error exception;\r\n        begin\r\n        tsno:=&salesman_number;\r\n        select sno,target,actual into tsno,tr,ta \r\n        from sales_man \r\n        where sno=tsno;\r\n        if ta<tr then\r\n        raise error;\r\n        else\r\n        dbms_output.put_line('...Commission Received...');\r\n        end if;\r\n        exception\r\n        when error then\r\n        dbms_output.put_line('...Commission is not Received...');\r\n        when no_data_found then\r\n        dbms_output.put_line('Entered salesman not there in a table');\r\n        end;\r\n        -------------------------------------------------------------------\r\n        @+paste the file path in sql+\r\n        click enter and press /\r\n        \r\n        output:\r\n        Enter value for salesman_number: 1\r\n    `,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: ` Write a  PL/SQL Program to demonstrate functions.`,\r\n    code: `\r\n        SQL> create table emp(empno number,ename varchar2(10),salary number,commission number);\r\n        SQL> insert into emp values(&empno,'&ename',&salary,'&commission');\r\n        SQL> insert into emp values(1,'manu',5000,'');\r\n        SQL> insert into emp values(2,'hari',4000,'4000');\r\n        SQL> select * From emp;\r\n\r\n\r\n        Function code :\r\n            create or replace function review(empid number) return number is\r\n            incr number;\r\n            net number;\r\n            vempno number%type;\r\n            vsal number;\r\n            vcomm emp.commission%type;\r\n            begin\r\n            select empno,salary,nvl(commission,0) into vempno,vsal,vcomm from emp where empno=empid;\r\n            net:=vsal+vcomm;\r\n            if net<=5000 then\r\n            incr:=net*0.20;\r\n            elsif net>=8000 and vsal<=10000 then\r\n            incr=net*0.50;\r\n            else\r\n            incr:=net*0.40;\r\n            end if;\r\n            return(incr);\r\n            end review;\r\n\r\n        PL/SQL block :\r\n            declare\r\n            incr_sal number(7,2);\r\n            begin\r\n            incr_sal:=review(1);\r\n            dbms_output.put_line('the increment is'||incr_sal);\r\n            end;\r\n\r\n    `,\r\n  },\r\n  {\r\n    cycle: 3,\r\n    title: `Write a  PL/SQL Program to demonstrate stored procedures.`,\r\n    code: `\r\n        SQL> create table emp7(empno number,ename varchar2(5),basic number,netsal number);\r\n            Table created.\r\n        SQL> insert into emp7(empno,ename,basic) values(1,'Manu',9000);\r\n        SQL> select * from emp7;\r\n\r\n        Stored Procedure :\r\n            create or replace procedure inc_sal(no in number,basic in number,msal out number,m out number)  as \r\n            teno number;\r\n            s number;\r\n            begin\r\n                select empno into teno from emp7 where empno=no;\r\n                if sql%found then\r\n                        s:=basic+(basic*0.05);\r\n                        msal:=s;\r\n                        m:=1;\r\n                else\r\n                        m:=0;\r\n                end if;\r\n            end;\r\n            /\r\n            PL/SQL Block :\r\n\r\n            declare\r\n            teno number:=&empnumber;\r\n            tbasic number;\r\n            msal number;\r\n            m number;\r\n            begin\r\n            select empno,basic into teno,tbasic from emp7 where empno=teno;\r\n            inc_sal(teno,tbasic,msal,m);\r\n            if m=1 then\r\n                        update emp7 set netsal=msal where empno=teno;\r\n                end if;\r\n            exception\r\n            when No_data_found then\r\n            dbms_output.put_line('no such record');\r\n            end;\r\n\r\n            / \r\n            Enter value for empnumber: 1\r\n            SQL> select * from emp7;\r\n            `,\r\n  },\r\n];\r\n"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,CAClB;EACEC,KAAK,EAAG,4BAA2B;EACnCC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,+DAA8D;EACtEC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,+DAA8D;EACtEC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,yCAAwC;EAChDC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,gEAA+D;EACvEC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,uDAAsD;EAC9DC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,iEAAgE;EACxEC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,oDAAmD;EAC3DC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,kDAAiD;EACzDC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,gLAA+K;EACvLC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,kDAAiD;EACzDC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,6FAA4F;EACpGC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,0EAAyE;EACjFC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,2DAA0D;EAClEC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,yCAAwC;EAChDC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEF,KAAK,EAAG,yCAAwC;EAChDC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG;AACZ;AACA;AACA;AACA;AACA;AACA,SAAS;EACLE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG,yGAAwG;EAChHE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG,uEAAsE;EAC9EE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG,+DAA8D;EACtEE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG;AACZ;AACA,SAAS;EACLE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG,oDAAmD;EAC3DE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,EACD;EACEC,KAAK,EAAE,CAAC;EACRH,KAAK,EAAG,2DAA0D;EAClEE,IAAI,EAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}