{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\wdd-b\\\\src\\\\components\\\\SplitButton.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { grey } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: grey[900]\n    },\n    secondary: {\n      main: grey[900]\n    }\n  },\n  typography: {\n    // fontFamily: [\"Syne\", \"sans-serif\"].join(\",\"),\n  }\n});\nexport default function SplitButton({\n  opts,\n  handleType\n}) {\n  _s();\n  const options = [...opts];\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"outlined\",\n        ref: anchorRef,\n        \"aria-label\": \"split button\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          children: options[selectedIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          \"aria-controls\": open ? \"split-button-menu\" : undefined,\n          \"aria-expanded\": open ? \"true\" : undefined,\n          \"aria-label\": \"select merge strategy\",\n          \"aria-haspopup\": \"menu\",\n          onClick: handleToggle,\n          children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popper, {\n        sx: {\n          zIndex: 1\n        },\n        open: open,\n        anchorEl: anchorRef.current,\n        role: undefined,\n        transition: true,\n        disablePortal: true,\n        children: ({\n          TransitionProps,\n          placement\n        }) => /*#__PURE__*/_jsxDEV(Grow, {\n          ...TransitionProps,\n          style: {\n            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                id: \"split-button-menu\",\n                autoFocusItem: true,\n                children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  selected: index === selectedIndex,\n                  onClick: event => handleMenuItemClick(event, index),\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(SplitButton, \"Ug6Z6ZRRSyZxthD8RtPgRqzkLdw=\");\n_c = SplitButton;\nvar _c;\n$RefreshReg$(_c, \"SplitButton\");","map":{"version":3,"names":["React","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","ThemeProvider","createTheme","grey","jsxDEV","_jsxDEV","darkTheme","palette","primary","main","secondary","typography","SplitButton","opts","handleType","_s","options","open","setOpen","useState","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","Fragment","children","theme","variant","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","undefined","sx","zIndex","anchorEl","role","transition","disablePortal","TransitionProps","placement","style","transformOrigin","onClickAway","id","autoFocusItem","map","option","selected","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/wdd-b/src/components/SplitButton.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\r\nimport Grow from \"@mui/material/Grow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popper from \"@mui/material/Popper\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport MenuList from \"@mui/material/MenuList\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nconst darkTheme = createTheme({\r\n  palette: { primary: { main: grey[900] }, secondary: { main: grey[900] } },\r\n  typography: {\r\n    // fontFamily: [\"Syne\", \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nexport default function SplitButton({opts, handleType}) {\r\n  const options = [\r\n    ...opts\r\n  ];\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <ButtonGroup\r\n          variant=\"outlined\"\r\n          ref={anchorRef}\r\n          aria-label=\"split button\"\r\n        >\r\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n          <Button\r\n            size=\"small\"\r\n            aria-controls={open ? \"split-button-menu\" : undefined}\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            aria-label=\"select merge strategy\"\r\n            aria-haspopup=\"menu\"\r\n            onClick={handleToggle}\r\n          >\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper\r\n          sx={{\r\n            zIndex: 1,\r\n          }}\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                    {options.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                      >\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}