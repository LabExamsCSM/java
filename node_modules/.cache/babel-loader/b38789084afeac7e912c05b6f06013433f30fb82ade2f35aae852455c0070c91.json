{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\wdd-b\\\\src\\\\components\\\\Code.js\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Typography, Button } from \"@mui/material\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cardTheme = createTheme({\n  palette: {\n    background: {\n      paper: \"#fafafa\"\n    },\n    primary: {\n      main: \"#212121\"\n    },\n    secondary: {\n      main: \"#212121\"\n    }\n  }\n});\nfunction Code({\n  title,\n  code\n}) {\n  const handleCopyClick = () => {\n    // const textToCopy = code; // Replace with the text you want to copy\n    navigator.clipboard.writeText(code);\n    alert(\"Copied to clipboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: cardTheme,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 275\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              display: \"inline\"\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            variant: \"body2\",\n            children: /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n              language: \"html\",\n              style: vscDarkPlus,\n              children: code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleCopyClick,\n            children: \"copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Code;\nexport default Code;\nvar _c;\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"names":["React","Box","Card","CardActions","CardContent","Typography","Button","Prism","SyntaxHighlighter","vscDarkPlus","ThemeProvider","createTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","cardTheme","palette","background","paper","primary","main","secondary","Code","title","code","handleCopyClick","navigator","clipboard","writeText","alert","children","theme","sx","minWidth","color","variant","component","display","fileName","_jsxFileName","lineNumber","columnNumber","language","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/wdd-b/src/components/Code.js"],"sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { Typography, Button } from \"@mui/material\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\n\r\nconst cardTheme = createTheme({\r\n  palette: {\r\n    background: { paper: \"#fafafa\" },\r\n    primary: { main: \"#212121\" },\r\n    secondary: { main: \"#212121\" },\r\n  },\r\n});\r\n\r\nfunction Code({title, code}) {\r\n\r\n    const handleCopyClick = () => {\r\n        // const textToCopy = code; // Replace with the text you want to copy\r\n        navigator.clipboard.writeText(code)\r\n        alert(\"Copied to clipboard\")\r\n      };\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={cardTheme}>\r\n        <Card sx={{ minWidth: 275 }}>\r\n          <CardContent>\r\n            <Typography\r\n              color=\"primary\"\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ display: \"inline\" }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"body2\">\r\n              <SyntaxHighlighter language=\"html\" style={vscDarkPlus}>\r\n                {code}\r\n              </SyntaxHighlighter>\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleCopyClick}>\r\n              copy\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Code;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAClD,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SAASC,WAAW,QAAQ,gDAAgD;AAC5E,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,OAAO,EAAE;IACPC,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAU,CAAC;IAChCC,OAAO,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAC;IAC5BC,SAAS,EAAE;MAAED,IAAI,EAAE;IAAU;EAC/B;AACF,CAAC,CAAC;AAEF,SAASE,IAAIA,CAAC;EAACC,KAAK;EAAEC;AAAI,CAAC,EAAE;EAEzB,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACAC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,IAAI,CAAC;IACnCK,KAAK,CAAC,qBAAqB,CAAC;EAC9B,CAAC;EAEL,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACH,aAAa;MAACsB,KAAK,EAAEhB,SAAU;MAAAe,QAAA,eAC9BlB,OAAA,CAACX,IAAI;QAAC+B,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAH,QAAA,gBAC1BlB,OAAA,CAACT,WAAW;UAAA2B,QAAA,gBACVlB,OAAA,CAACR,UAAU;YACT8B,KAAK,EAAC,SAAS;YACfC,OAAO,EAAC,IAAI;YACZC,SAAS,EAAC,KAAK;YACfJ,EAAE,EAAE;cAAEK,OAAO,EAAE;YAAS,CAAE;YAAAP,QAAA,EAEzBP;UAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACb7B,OAAA,CAACR,UAAU;YAAC8B,KAAK,EAAC,SAAS;YAACC,OAAO,EAAC,OAAO;YAAAL,QAAA,eACzClB,OAAA,CAACL,iBAAiB;cAACmC,QAAQ,EAAC,MAAM;cAACC,KAAK,EAAEnC,WAAY;cAAAsB,QAAA,EACnDN;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACd7B,OAAA,CAACV,WAAW;UAAA4B,QAAA,eACVlB,OAAA,CAACP,MAAM;YAAC8B,OAAO,EAAC,WAAW;YAACD,KAAK,EAAC,SAAS;YAACU,OAAO,EAAEnB,eAAgB;YAAAK,QAAA,EAAC;UAEtE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC,gBAChB,CAAC;AAEP;AAACI,EAAA,GApCQvB,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}